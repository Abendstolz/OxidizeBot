types:
  first-run:
    doc: Indicates whether the bot has run at least once.
    type: {id: bool}
  gtav/enabled:
    doc: If the `!gtav` module is enabled.
    type: {id: bool}
  gtav/chat-prefix:
    doc: Prefix to use when announcing effects.
    type: {id: string}
  gtav/cooldown:
    doc: Global cooldown between each effect.
    type: {id: duration}
  gtav/other%:
    doc: Other effect cost scaling.
    type: {id: percentage}
  gtav/punish%:
    doc: Punishment scaling.
    type: {id: percentage}
  gtav/reward%:
    doc: Reward cost scaling.
    type: {id: percentage}
  gtav/success-feedback:
    doc: If we should have chat feedback on successful commands.
    type: {id: bool}
  irc/moderator-cooldown:
    doc: How long we must wait between each moderator action.
    type: {id: duration}
  irc/startup-message:
    doc: Message to send when the bot starts up.
    type: {id: string}
  irc/idle-detection/threshold:
    doc: How many messages must be received before the channel is no longer considered idle.
    type: {id: number}
  irc/viewer-reward%:
    doc: Scaling for viewer rewards.
    type: {id: percentage}
  irc/whitelisted-hosts:
    doc: Hosts that are whitelisted for linking to in chat.
    type: {id: set, value: {id: string}}
  migration/aliases-migrated:
    doc: If aliases have been migrated from the configuration file.
    type: {id: bool}
  migration/whitelisted-hosts-migrated:
    doc: If whitelisted hosts have been migrated from the configuration file.
    type: {id: bool}
  migration/themes-migrated:
    doc: If themes have been migrated from the configuration file.
    type: {id: bool}
  player/duplicate-duration:
    doc: The minimum amount of time that has to have been passed to allow adding a song that has already been queued.
    type: {id: duration}
  player/detached:
    doc: If the player is detached, in that it can no longer control the music.
    type: {id: bool}
    scope: player/attach-detach
  player/echo-current-song:
    doc: Echo the current song in chat.
    type: {id: bool}
  player/max-queue-length:
    doc: The maximum queue length permitted in the player.
    type: {id: number}
  player/max-songs-per-user:
    doc: The maximum number of songs that can be requested per user.
    type: {id: number}
  player/song-update-interval:
    doc: The interval at which song updates are visible. Used in the Overlay.
    type: {id: duration}
  player/spotify/volume-scale:
    doc: Scaling to apply to volume. A value of 50% would mean that that would effectively be the maximum volume.
    type: {id: percentage}
  player/youtube/volume-scale:
    doc: Scaling to apply to volume. A value of 50% would mean that that would effectively be the maximum volume.
    type: {id: percentage}
  promotions/enabled:
    doc: If the `!promo` module is enabled.
    type: {id: bool}
  promotions/frequency:
    doc: The highest frequency at which promotions are posted.
    type: {id: duration}
  swearjar/enabled:
    doc: If the `!swearjar` module is enabled.
    type: {id: bool}
  swearjar/reward:
    doc: The amount of currency each user is rewarded by the `!swearjar` command.
    type: {id: number}
  swearjar/cooldown:
    doc: Minimum cooldown between each `!swearjar` invocation.
    type: {id: duration}
  secrets/oauth2/spotify/token:
    doc: Stored token for Spotify authentication.
    type: {id: raw, optional: true}
  secrets/oauth2/twitch-bot/token:
    doc: Stored token for Twitch Bot authentication.
    type: {id: raw, optional: true}
  secrets/oauth2/twitch-streamer/token:
    doc: Stored token for Twitch Streamer authentication.
    type: {id: raw, optional: true}
  secrets/oauth2/youtube/token:
    doc: Stored token for YouTube authentication.
    type: {id: raw, optional: true}
  song/chat-feedback:
    doc: If song feedback is visible in chat or not.
    type: {id: bool}
  song/request-reward:
    doc: Fixed reward that anyone gets for requesting songs.
    type: {id: number}
  song/subscriber-only:
    doc: If only subscribers can request songs.
    type: {id: bool}
  song/spotify/min-currency:
    doc: The minimum amount of stream currency required to request Spotify songs.
    type: {id: number}
  song/spotify/max-duration:
    doc: The longest duration we will accept for a Spotify songs. Any longer will be capped.
    type: {id: duration}
  song/spotify/subscriber-only:
    doc: If only subscribers can request songs from Spotify.
    type: {id: bool}
  song/youtube/min-currency:
    doc: The minimum amount of stream currency required to request YouTube songs.
    type: {id: number}
  song/youtube/support:
    doc: If we accept YouTube song requests (Experimental).
    type: {id: bool}
  song/youtube/max-duration:
    doc: The longest duration we will accept for a YouTube video. Any longer will be capped.
    type: {id: duration}
  song/youtube/min-currency:
    doc: The minimum amount of stream currency required to request YouTube songs.
    type: {id: number}
  song/youtube/subscriber-only:
    doc:
      If only subscribers can request songs from YouTube.
      This is deprecated in favor of the song/youtube scope.
    type: {id: bool}
  water/enabled:
    doc: If the `!water` module is enabled.
    type: {id: bool}
  water/cooldown:
    doc: Cooldown between each `!water` command.
    type: {id: duration}
  water/reward%:
    doc: Reward scaling for doing a water reminder.
    type: {id: percentage}
  countdown/enabled:
    doc: If the `!countdown` module is enabled.
    type: {id: bool}
  countdown/path:
    doc: The path used for writing the countdown.
    type: {id: string, optional: true}
  currency/enabled:
    doc: If stream currency is enabled.
    type: {id: bool}
  currency/name:
    doc: The name used for the current stream currency.
    type: {id: string, optional: true}
  currency/notify-rewards:
    doc: Send a global notification on viewer rewards.
    type: {id: bool}
  obs/url:
    doc: The URL to use when connecting to OBS.
    type: {id: string, optional: true}